{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sungmin\\\\Desktop\\\\react-master\\\\bonlunchbox_exam\\\\src\\\\page\\\\GoodsList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport GoodsItem from \"../components/GoodsItem\";\nimport axios from \"axios\";\nimport GoodsDetail from \"./GoodsDetail\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GoodsList = ({\n  goods,\n  setGoods\n}) => {\n  _s();\n  //1.axios를 이용하여 상품정보를 가진 URL로 요청한 후, 응답받은 데이터를\n  const getPostAll = async () => {\n    let response = await axios('http://localhost:3004/goods_list');\n    setGoods(response.data);\n  };\n\n  //상품리스트 state에 저장하는 getGoodsList함수를 구현하시오.\n  //URL: http://localhost:3004/goods_list\n\n  //2.useEffect() 를 이용하여 getGoodsList함수를 한 번만 호출하시오.\n  useEffect(() => {\n    console.log(\"데이터 받아오기!\");\n    getPostAll();\n    console.log(goods);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"goods-list\",\n    children: goods\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(GoodsList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = GoodsList;\nexport default GoodsList;\nvar _c;\n$RefreshReg$(_c, \"GoodsList\");","map":{"version":3,"names":["React","useEffect","GoodsItem","axios","GoodsDetail","jsxDEV","_jsxDEV","GoodsList","goods","setGoods","_s","getPostAll","response","data","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sungmin/Desktop/react-master/bonlunchbox_exam/src/page/GoodsList.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport GoodsItem from \"../components/GoodsItem\";\nimport axios from \"axios\";\nimport GoodsDetail from \"./GoodsDetail\";\n\nconst GoodsList = ({ goods, setGoods }) => {\n\n  //1.axios를 이용하여 상품정보를 가진 URL로 요청한 후, 응답받은 데이터를\n  const getPostAll = async () => {\n    let response = await axios('http://localhost:3004/goods_list')\n    setGoods(response.data)\n  }\n\n\n  //상품리스트 state에 저장하는 getGoodsList함수를 구현하시오.\n  //URL: http://localhost:3004/goods_list\n\n\n\n  //2.useEffect() 를 이용하여 getGoodsList함수를 한 번만 호출하시오.\n useEffect(()=>{\n        console.log(\"데이터 받아오기!\");\n        getPostAll()\n        console.log(goods)\n    },[])\n\n  return (\n    <div className=\"goods-list\">\n      {/* 3.상품리스트 안에 있는 정보를 GoodsItem 컴포넌트를 활용해 출력하시오. */}\n      {goods}\n      {/* {goods.map((item)=>{\n        return(\n          <GoodsItem\n          key={item.id}\n          item={item}\n          />\n        )\n      })} */}\n    </div>\n  );\n};\n\nexport default GoodsList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAEzC;EACA,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAIC,QAAQ,GAAG,MAAMT,KAAK,CAAC,kCAAkC,CAAC;IAC9DM,QAAQ,CAACG,QAAQ,CAACC,IAAI,CAAC;EACzB,CAAC;;EAGD;EACA;;EAIA;EACDZ,SAAS,CAAC,MAAI;IACPa,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxBJ,UAAU,CAAC,CAAC;IACZG,OAAO,CAACC,GAAG,CAACP,KAAK,CAAC;EACtB,CAAC,EAAC,EAAE,CAAC;EAEP,oBACEF,OAAA;IAAKU,SAAS,EAAC,YAAY;IAAAC,QAAA,EAExBT;EAAK;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OASH,CAAC;AAEV,CAAC;AAACX,EAAA,CAnCIH,SAAS;AAAAe,EAAA,GAATf,SAAS;AAqCf,eAAeA,SAAS;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}